$(function() {
  if ($('body.form').length === 0 )
    return;

  var activeKnob, knob, clickedPoint;
  var display = new Display($('#led'));
  var dragging = false;
  var limit = 140;

  $('.knob').each(function() {
    my_knob = new Knob(this);
    degree = my_knob.degreeForMidi($(this).data('midi'), limit);
    $(this).data('rotation', degree);
    my_knob.rotate(degree);
  });

  $('.bottom-row label').each(function(){
    var myInput = $('input#' + $(this).attr('for'));
    if (myInput.prop('checked')) {
      $(this).find('span').find('div').addClass('lit');
    }
  });

  $('.bottom-row label').click(function(){
    if ($('input#' + $(this).attr('for')).is(':checkbox')) {
      $(this).find('span .light').toggleClass('lit');
    } else {
      $('.light[data-radio]').each(function() {
        $(this).removeClass('lit');
      });
      $(this).find('span .light').addClass('lit');
    }
  });

  $('.button').each(function(){
    var vco, value, vcoKnob, input;
    vco = $(this).attr('id').split('_')[0];
    value = $(this).data('active');
    vcoKnob = $('.knob#' + vco + '_pitch');
    if (value === true) {
      $(this).addClass('lit');
      vcoKnob.addClass('lit');
    }
  });

  $('.button').click(function(){
    var vco, value, vcoKnob, input;
    vco = $(this).attr('id').split('_')[0];
    value = $(this).data('active');
    vcoKnob = $('.knob#' + vco + '_pitch');
    input = $('input#patch_' + $(this).attr('id').split('_').slice(0, -1).join('_'));
    $(this).toggleClass('lit');
    vcoKnob.toggleClass('lit');
    if (value === true) {
      $(this).data('active', false);
      input.prop('checked', false);
    } else {
      $(this).data('active', true);
      input.prop('checked', true);
    }
  });

  $('.knob').mousedown(function(e) {
    clickedPoint = e.pageY;
    e.preventDefault();
    e.stopPropagation();
    dragging = true;
    activeKnob = new Knob(this);
    knob = $(activeKnob.element);
    if (!knob.data('origin')) knob.data('origin', {
      top: knob.offset().top
    });
  })

  $('.knob').mouseenter(function(){
    var midi = $(this).data('midi');
    if (dragging)
      return false;
    activeKnob = new Knob(this);
    display.update(midi, activeKnob.isPitch);
  });

  $(document).mousemove(function(e) {
    if (dragging) {
      var degree, currentPoint;
      $('body').css('cursor', 'ns-resize');
      currentPoint = e.pageY;
      degree = activeKnob.rotation + (clickedPoint - currentPoint);
      if (degree > limit) {
        activeKnob.rotation = limit;
        clickedPoint = currentPoint;
      }
      if (degree < -limit) {
        activeKnob.rotation = -limit;
        clickedPoint = currentPoint;
      }
      degree = activeKnob.rotation + (clickedPoint - currentPoint);
      if (currentPoint !== clickedPoint || degree === -limit || degree === limit) {
        activeKnob.rotate(degree);
        midi = Math.round(((63.5 / limit) * degree) + 63.5);
        activeKnob.inputElement.val(midi);
        display.update(midi, activeKnob.isPitch);
      }
    }
  });

  $(document).mouseup(function(e) {
    if (!dragging)
      return false;
    dragging = false;
    var currentPoint = e.pageY;
    $('body').css('cursor', 'default');

    var currentAngle = activeKnob.rotation + (clickedPoint - currentPoint);
    if (activeKnob.rotation > limit) {
      activeKnob.rotation = limit;
      currentPoint = clickedPoint;
    }
    if (activeKnob.rotation < -limit) {
      activeKnob.rotation = -limit;
      currentPoint = clickedPoint;
    }
    $(activeKnob.element).data('rotation', currentAngle);
    $(activeKnob.element).data('midi', midi);
  });
});
