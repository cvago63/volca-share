.container
  .stretchy
    .volca
      .small.knob.eg#attack{ data: { midi: @patch.attack || 63 } }
        .notch
      .small.knob.eg#decay_release{ data: { midi: @patch.decay_release || 63 } }
        .notch
      .small.knob.eg#cutoff_eg_int{ data: { midi: @patch.cutoff_eg_int || 63 } }
        .notch
      #led
        .digit#thousands
        .digit#hundreds
        .digit#tens
        .digit#ones
      .medium.knob#peak{ data: { midi: @patch.peak || 63 } }
        .notch
      .large.knob#cutoff{ data: { midi: @patch.cutoff || 63 } }
        .notch
      .medium.knob.lfo#lfo_rate{ data: { midi: @patch.lfo_rate || 63 } }
        .notch
      .medium.knob.lfo#lfo_int{ data: { midi: @patch.lfo_int || 63 } }
        .notch
      .small.knob.vco#vco1_pitch{ data: { midi: @patch.vco1_pitch || 63 } }
        .notch
      .small.knob.vco#vco2_pitch{ data: { midi: @patch.vco2_pitch || 63 } }
        .notch
      .small.knob.vco#vco3_pitch{ data: { midi: @patch.vco3_pitch || 63 } }
        .notch
      .button#vco1_active_button{ data: { active: @patch.vco1_active.to_s || 'true' } }
      .button#vco2_active_button{ data: { active: @patch.vco2_active.to_s || 'true' } }
      .button#vco3_active_button{ data: { active: @patch.vco3_active.to_s || 'true' } }
      .bottom-row
        = radio_button_tag 'patch[vco_group]', 'one', @patch.vco_group_one, class: :control
        = label_tag('patch[vco_group_one]') do
          %span
            .light{ data: { radio: true, active: @patch.vco_group_one } }

        = radio_button_tag 'patch[vco_group]', 'two', @patch.vco_group_two, class: :control
        = label_tag('patch[vco_group_two]') do
          %span
            .light{ data: { radio: true, active: @patch.vco_group_two } }

        = radio_button_tag 'patch[vco_group]', 'three', @patch.vco_group_three, class: :control
        = label_tag('patch[vco_group_three]') do
          %span
            .light{ data: { radio: true, active: @patch.vco_group_three } }

        = check_box :patch, :lfo_target_amp, { class: :control, checked: @patch.lfo_target_amp }, 'true', 'false'
        = label_tag('patch[lfo_target_amp]') do
          %span
            .light{ data: { active: @patch.lfo_target_amp || false } }

        = check_box :patch, :lfo_target_pitch, { class: :control, checked: @patch.lfo_target_pitch}, 'true', 'false'
        = label_tag('patch[lfo_target_pitch]') do
          %span
            .light{ data: { active: @patch.lfo_target_pitch || false } }

        = check_box :patch, :lfo_target_cutoff, { class: :control, checked: @patch.lfo_target_cutoff}, 'true', 'false'
        = label_tag('patch[lfo_target_cutoff]') do
          %span
            .light{ data: { active: @patch.lfo_target_cutoff || true } }

        = check_box :patch, :lfo_wave, { class: :control, checked: @patch.wave_lit?('lfo')}, 'square', 'triangle'
        = label_tag('patch[lfo_wave]') do
          %span
            .light{ data: { active: @patch.lfo_wave || false } }

        = check_box :patch, :vco1_wave, { class: :control, checked: @patch.wave_lit?('vco1')}, 'square', 'saw'
        = label_tag('patch[vco1_wave]') do
          %span
            .light{ data: { active: @patch.vco1_wave || false } }

        = check_box :patch, :vco2_wave, { class: :control, checked: @patch.wave_lit?('vco2')}, 'square', 'saw'
        = label_tag('patch[vco2_wave]') do
          %span
            .light{ data: { active: @patch.vco2_wave || false } }

        = check_box :patch, :vco3_wave, { class: :control, checked: @patch.wave_lit?('vco3')}, 'square', 'saw'
        = label_tag('patch[vco3_wave]') do
          %span
            .light{ data: { active: @patch.vco3_wave || true } }

        = check_box :patch, :sustain_on, { class: :control, checked: @patch.sustain_on }, 'true', 'false'
        = label_tag('patch[sustain_on]') do
          %span
            .light{ data: { active: @patch.sustain_on || false } }

        = check_box :patch, :amp_eg_on, { class: :control, checked: @patch.amp_eg_on}, 'true', 'false'
        = label_tag('patch[amp_eg_on]') do
          %span
            .light{ data: { active: @patch.amp_eg_on || false } }

  = range_field_tag 'patch[attack]', (@patch.attack || 63), in: 0..127, class: :hidden
  = range_field_tag 'patch[decay_release]', (@patch.decay_release || 63), in: 0..127, class: :hidden
  = range_field_tag 'patch[cutoff_eg_int]', (@patch.cutoff_eg_int || 63), in: 0..127, class: :hidden
  = range_field_tag 'patch[peak]', (@patch.peak || 63), in: 0..127, class: :hidden
  = range_field_tag 'patch[cutoff]', (@patch.cutoff || 63), in: 0..127, class: :hidden
  = range_field_tag 'patch[lfo_rate]', (@patch.lfo_rate || 63), in: 0..127, class: :hidden
  = range_field_tag 'patch[lfo_int]', (@patch.lfo_int || 63), in: 0..127, class: :hidden
  = range_field_tag 'patch[vco1_pitch]', (@patch.vco1_pitch || 63), class: :hidden
  = check_box :patch, :vco1_active, { class: :hidden }.merge(@patch.checked?('vco1_active')), 'true', 'false'
  = range_field_tag 'patch[vco2_pitch]', (@patch.vco2_pitch || 63), class: :hidden
  = check_box :patch, :vco2_active, { class: :hidden }.merge(@patch.checked?('vco2_active')), 'true', 'false'
  = range_field_tag 'patch[vco3_pitch]', (@patch.vco3_pitch || 63), class: :hidden
  = check_box :patch, :vco3_active, { class: :hidden }.merge(@patch.checked?('vco3_active')), 'true', 'false'

  .field
    = label_tag :name, 'Patch name'
    = text_field_tag 'patch[name]', @patch.name, class: 'form-control'
  .field
    = label_tag :privacy, 'Private?'
    %br
    = check_box :patch, :private?, @patch.checked?('private?'), 'true', 'false'
  .field
    = label_tag 'patch[notes]', 'Notes'
    = text_area_tag 'patch[notes]', @patch.notes, size: '50x3', class: 'form-control'
  .actions
    = submit_tag 'Save'
