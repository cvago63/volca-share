VS.Knob = (element) ->
  scope = @
  @element = element
  @midi = $(@element).data('midi')
  @rotation = $(@element).data('rotation') or 0
  @displayStyle = 'midiString'
  @inputElement = $('input#patch_' + $(@element).attr('id'))

  setDisplayStyle = ->
    if $(scope.element).attr('id').split('_')[1] == 'pitch'
      scope.displayStyle = 'pitchString'
    else if $(scope.element).attr('id') == 'octave'
      scope.displayStyle = 'octaveString'

  setDisplayStyle()

  @rotate = (degree) ->
    knob = $(@element)
    knob.css '-moz-transform', 'rotate(' + degree + 'deg)'
    knob.css '-moz-transform-origin', '50% 50%'
    knob.css '-webkit-transform', 'rotate(' + degree + 'deg)'
    knob.css '-webkit-transform-origin', '50% 50%'
    knob.css '-o-transform', 'rotate(' + degree + 'deg)'
    knob.css '-o-transform-origin', '50% 50%'
    knob.css '-ms-transform', 'rotate(' + degree + 'deg)'
    knob.css '-ms-transform-origin', '50% 50%'
    return

  @degreeForMidi = (midi, limit) ->
    Math.round (midi - 63.5) / (63.5 / limit)

  @autoRotate = (d) ->
    <% if Rails.env.test? %>
    $(scope.element).css(transform: 'rotate(' + d + 'deg)')
    <% else %>
    currentRotation = parseInt(@rotation)
    $(deg: currentRotation).animate { deg: d }, step: (now, fx) ->
      $(scope.element).css(transform: 'rotate(' + now + 'deg)')
      return
    <% end %>
    return
  return
